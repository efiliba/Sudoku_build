/*@color1:#06A1C0;
@color2:#8F4F9F;
@color3:#ED1D24;

.define(@var) {
  @colorSet: 'color@{var}';
}

color_@{index} {
    .define(@index);
    color: @@colorSet;
}*/

/*.boardRows(@ratio) {
    tr {
        height: @ratio;

        td {
            width: @ratio;
        }
    }
}*/

.repeatRows (@from, @to) when (@from <= @to) {
    tr:first-child:nth-last-child(@{from}),
    tr:first-child:nth-last-child(@{from}) ~ tr {
        height: 100% / @from;
    }

    .repeatRows(@from + 1, @to);
}

.repeatColumns (@from, @to) when (@from <= @to) {
    td:first-child:nth-last-child(@{from}),
    td:first-child:nth-last-child(@{from}) ~ td {
        width: 100% / @from;
    }

    .repeatColumns(@from + 1, @to);
}

html {
    height: 100%;
}

body {
    overflow-x:hidden;
    line-height: normal;
    height: 100%;
}

#sudokuBoard {
    width: 100%;
    height: 100%;
    float: left;
}

@sliderButtonWidth: 17px;
@sliderContentWidth: 160px;

slider {
    position: absolute;
    width: @sliderButtonWidth + @sliderContentWidth;
    height: 100%;
    right: -@sliderContentWidth;
    background-color: transparent;
    opacity: 0.8;

    &.sliderOpen {
        border-left: 1px inset black;
    }
}

settings {
    display: block;
    margin-left: @sliderButtonWidth;

    select {
        width: 40px;
    }
}

table.grid {
    border: 5px inset red;
    border-collapse: separate;
    border-spacing: 0px;
    width: 100%;
    height: 100%;

    .repeatRows(2, 4);
    .repeatColumns(2, 4);

    & > tbody > tr > td > table.subGrid {
        border: 4px inset blue;
        border-collapse: separate;
        border-spacing: 0px;
        margin: 0px;
        width: 100%;
        height: 100%;

        & > tbody > tr > td {
            div {
                height: 100%;
            }
    
            table {
                border-collapse: separate;
                border-spacing: 0px;
                width: 100%;
                height: 100%;
    
                &.cell {
                    border: 3px inset green;
    
                    tr > td {
                        border: 2px inset gray;
                        text-align: center;
    
                        &.strikeOut {
                            background-image: url('../img/StrikeOut.png');
                            background-size: 100% 100%;
                            /*    text-shadow: 0 1px 0 black; */
                        }
                    }
                }
    
                &.symbol-selected {
                    border: 3px inset yellow;
                    font-size: 40px;
                    color: red;
                    text-align: center;
    
                    .loaded {
                        background-image: url('../img/Sphere.png');
                        background-repeat: no-repeat;
                        background-position: center center;
                        color: yellow;
                    }

                    .user {
                        background-image: url('../img/Sphere.png');
                        background-repeat: no-repeat;
                        background-position: center center;
                        color: white;
                    }

                    .calculated {
                        background-image: url('../img/Sphere.png');
                        background-repeat: no-repeat;
                        background-position: center center;
                        color: green;
                    }
                }
            }
        }
    }
}

.toggle {
    -webkit-transition: linear 1s;
    -moz-transition: linear 1s;
    -ms-transition: linear 1s;
    -o-transition: linear 1s;
    transition: linear 1s;
}

.toggle.ng-enter {
    opacity: 0;
}

.toggle.ng-enter-active {
    opacity: 1;
}

.toggle.ng-leave {
    opacity: 1;
}

.toggle.ng-leave-active {
    opacity: 0;
}
